apiVersion: apiextensions.crossplane.io/v1
kind: CompositeResourceDefinition
metadata:
  name: xazuresqlelasticdatabases.azure.example.org
spec:
  group: azure.example.org
  names:
    kind: XAzureSQLElasticDatabase
    plural: xazuresqlelasticdatabases
    # Optional, but good practice if you want to use Claims
    claimNames:
      kind: AzureSQLElasticDatabase
      plural: azuresqlelasticdatabases
  versions:
    - name: v1alpha1
      served: true
      referenceable: true
      schema:
        openAPIV3Schema:
          type: object
          properties:
            spec:
              type: object
              properties:
                # Removed 'id' as it's not typically used for direct parameter mapping
                # and resource identification usually relies on external-name annotations.
                parameters:
                  type: object
                  description: Parameters for the Azure SQL Elastic Database.
                  properties:
                    location:
                      type: string
                      description: Azure region where the resources will be deployed.
                      # Add desired regions to the enum if you want to restrict
                      enum:
                        - EastUS
                        - WestUS
                        - NorthEurope
                        - WestEurope
                    resourceGroupName:
                      type: string
                      description: Base name for the Azure Resource Group.
                    serverName:
                      type: string
                      description: Base name for the Azure SQL Server.
                    administratorLogin:
                      type: string
                      description: Administrator login for the SQL Server.
                    administratorLoginPasswordSecretRef:
                      type: object
                      description: Reference to a Secret containing the SQL Server administrator password.
                      properties:
                        name:
                          type: string
                          description: Name of the Kubernetes Secret.
                        key:
                          type: string
                          description: Key in the Secret containing the password.
                      required:
                        - name
                        - key
                    # Updated elasticPoolSku definition
                    elasticPoolSku:
                      type: object
                      description: SKU details for the Elastic Pool.
                      properties:
                        name:
                          type: string
                          description: |
                            The name of the SKU (e.g., Standard, Premium, GeneralPurpose, GP_Gen5).
                        tier:
                          type: string
                          description: |
                            The tier of the SKU (e.g., Standard, Premium, GeneralPurpose, BusinessCritical).
                        capacity:
                          type: number # Changed to number to align with typical vCore/DTU values
                          description: |
                            Number of eDTUs or vCores (compute units).
                        family: # Added 'family'
                          type: string
                          description: The family of hardware (e.g., Gen4, Gen5, Fsv2, DC).
                        size: # Added 'size'
                          type: string
                          description: The size of the SKU (e.g., "100" for 100GB).
                      required:
                        - name
                        - tier
                        - capacity
                    # NEW: Per-database settings for the Elastic Pool
                    perDatabaseSettings:
                      type: array
                      description: Per-database settings for the Elastic Pool.
                      items:
                        type: object
                        properties:
                          maxCapacity:
                            type: number
                            description: The maximum capacity any one database can consume.
                          minCapacity:
                            type: number
                            description: The minimum capacity all databases are guaranteed.
                        required:
                          - maxCapacity
                          - minCapacity
                      minItems: 1 # Ensure at least one entry is provided
                    databases:
                      type: array
                      description: List of databases to create within the elastic pool.
                      items:
                        type: object
                        properties:
                          name:
                            type: string
                            description: Name of the SQL Database.
                          collation:
                            type: string
                            description: Collation for the SQL Database.
                            default: SQL_Latin1_General_CP1_CI_AS
                        required:
                          - name
                    # NEW: Namespace parameter
                    namespace:
                      type: string
                      description: Kubernetes namespace where connection secrets will be created.
                      default: default # Default to 'default' if not specified
                  required:
                    - location
                    - resourceGroupName
                    - serverName
                    - administratorLogin
                    - administratorLoginPasswordSecretRef
                    - elasticPoolSku
                    - perDatabaseSettings # Added to required
                    - databases
                    - namespace # Added to required
              required:
                - parameters
      # Optional: Add subresources for status and scale if desired
      # subresources:
      #   status: {}
      #   scale:
      #     specReplicasPath: .spec.parameters.instanceCount # Example, if you add instanceCount
      #     statusReplicasPath: .status.atProvider.instanceCount # Example