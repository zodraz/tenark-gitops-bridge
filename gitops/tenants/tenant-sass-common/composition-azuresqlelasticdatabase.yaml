apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: azuresqlelasticdatabase-composition
  labels:
    provider: azure
    service: sql
spec:
  compositeTypeRef:
    apiVersion: azure.tenark.com/v1alpha1
    kind: XAzureSQLElasticDatabase
  resources:
    # 1. Create a Resource Group
    - name: resourcegroup
      base:
        apiVersion: azure.upbound.io/v1beta1
        kind: ResourceGroup
        spec:
          forProvider: {}
      patches:
        - fromFieldPath: spec.parameters.location
          toFieldPath: spec.forProvider.location
        - fromFieldPath: spec.parameters.resourceGroupName
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: string
              string:
                fmt: "%s-rg"
        - fromFieldPath: spec.parameters.resourceGroupName
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-rg"

    # 2. Create an Azure SQL Server
    - name: sqlserver
      base:
        apiVersion: sql.azure.upbound.io/v1beta1
        kind: MSSQLServer
        spec:
          forProvider:
            version: "12.0"
            publicNetworkAccessEnabled: true
            minimalTlsVersion: "1.2"
            administratorLoginPasswordSecretRef: {}
            firewallRules:
              - name: AllowAzureServices
                startIpAddress: "0.0.0.0"
                endIpAddress: "0.0.0.0"
          writeConnectionSecretToRef:
            name: sqldb-connection-details
            namespace: crossplane-system
      patches:
        - fromFieldPath: spec.parameters.location
          toFieldPath: spec.forProvider.location
        - fromFieldPath: spec.parameters.resourceGroupName
          toFieldPath: spec.forProvider.resourceGroupNameRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-rg"
        - fromFieldPath: spec.parameters.serverName
          toFieldPath: metadata.annotations[crossplane.io/external-name]
        - fromFieldPath: spec.parameters.serverName
          toFieldPath: metadata.name
        - fromFieldPath: spec.parameters.administratorLogin
          toFieldPath: spec.forProvider.administratorLogin
        - fromFieldPath: spec.parameters.administratorLoginPasswordSecretRef.name
          toFieldPath: spec.forProvider.administratorLoginPasswordSecretRef.name
        - fromFieldPath: spec.parameters.administratorLoginPasswordSecretRef.key
          toFieldPath: spec.forProvider.administratorLoginPasswordSecretRef.key
        - fromFieldPath: spec.parameters.namespace
          toFieldPath: spec.forProvider.administratorLoginPasswordSecretRef.namespace
        - fromFieldPath: spec.parameters.namespace
          toFieldPath: writeConnectionSecretToRef.namespace
      connectionDetails:
        - fromConnectionSecretKey: username
        - fromConnectionSecretKey: password
        - fromConnectionSecretKey: port
        - fromConnectionSecretKey: endpoint

    # 3. Create an Azure SQL Elastic Pool
    - name: elasticpool
      base:
        apiVersion: sql.azure.upbound.io/v1beta1
        kind: MSSQLElasticPool
        spec:
          forProvider:
            perDatabaseSettings:
              - maxCapacity: 1
                minCapacity: 0
            sku:
              - {} # Define an empty object within the array to be fully patched
      patches:
        - fromFieldPath: spec.parameters.location
          toFieldPath: spec.forProvider.location
        - fromFieldPath: spec.parameters.resourceGroupName
          toFieldPath: spec.forProvider.resourceGroupNameRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-rg"
        - fromFieldPath: spec.parameters.serverName
          toFieldPath: spec.forProvider.serverNameRef.name
        - fromFieldPath: spec.parameters.serverName
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-pool"
        # Corrected: External name for elastic pool derived from serverName
        - fromFieldPath: spec.parameters.serverName
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: string
              string:
                fmt: "%s-pool"
        # Patches for elasticPoolSku now target the first element of the sku array
        - fromFieldPath: spec.parameters.elasticPoolSku.name
          toFieldPath: spec.forProvider.sku[0].name
        - fromFieldPath: spec.parameters.elasticPoolSku.tier
          toFieldPath: spec.forProvider.sku[0].tier
        - fromFieldPath: spec.parameters.elasticPoolSku.capacity
          toFieldPath: spec.forProvider.sku[0].capacity
        # Adding patches for family and size with Optional policy, assuming they are in XR
        - fromFieldPath: spec.parameters.elasticPoolSku.family
          toFieldPath: spec.forProvider.sku[0].family
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.parameters.elasticPoolSku.size
          toFieldPath: spec.forProvider.sku[0].size
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.parameters.elasticPoolSku.name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: string
              string:
                fmt: "%s-pool"

    # 4. Create Azure SQL Databases within the Elastic Pool
    - name: sqldatabases
      base:
        apiVersion: sql.azure.upbound.io/v1beta1
        kind: MSSQLDatabase
        spec:
          forProvider:
            collation: SQL_Latin1_General_CP1_CI_AS
          writeConnectionSecretToRef:
            name: sqldb-connection-details
            namespace: crossplane-system # Default, will be patched by XR's namespace parameter
      patches:
        - fromFieldPath: spec.parameters.resourceGroupName
          toFieldPath: spec.forProvider.resourceGroupNameRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-rg"
        - fromFieldPath: spec.parameters.serverName
          toFieldPath: spec.forProvider.serverNameRef.name
        - type: FromCompositeFieldPath
          fromFieldPath: name
          toFieldPath: metadata.annotations[crossplane.io/external-name]
          transforms:
            - type: string
              string:
                fmt: "%s-%s"
                variables:
                  - fromFieldPath: ../../../metadata.name
        - type: FromCompositeFieldPath
          fromFieldPath: name
          toFieldPath: metadata.name
          transforms:
            - type: string
              string:
                fmt: "%s-%s"
                variables:
                  - fromFieldPath: ../../../metadata.name
        - fromFieldPath: name
          toFieldPath: spec.forProvider.name
        - fromFieldPath: spec.parameters.serverName
          toFieldPath: spec.forProvider.elasticPoolIdRef.name
          transforms:
            - type: string
              string:
                fmt: "%s-pool"
        - fromFieldPath: collation
          toFieldPath: spec.forProvider.collation
          policy:
            fromFieldPath: Optional
        - fromFieldPath: spec.parameters.namespace
          toFieldPath: writeConnectionSecretToRef.namespace
      forEach: spec.parameters.databases